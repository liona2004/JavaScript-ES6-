Promise – это специальный объект, который содержит своё состояние. 
Вначале pending («ожидание»), затем – одно из: fulfilled («выполнено успешно») или rejected («выполнено с ошибкой»).

const makeServerRequest = new Promise((resolve, reject) => {});


resolve is used when you want your promise to succeed, and reject is used when you want it to fail
const myPromise = new Promise((resolve, reject) => {
  if(condition here) {
    resolve("Promise was fulfilled");
  } else {
    reject("Promise was rejected");
  }
});




it takes some amount of time, and after it completes you usually want to do something with the response from the server. This can be achieved by using the then method. 
The then method is executed immediately after your promise is fulfilled with resolve.
makeServerRequest.then(result => {
  console.log(result);
});




catch is the method used when your promise has been rejected. It is executed immediately after a promise's reject method is called. 
makeServerRequest.catch(error => {
  console.log(error);
});
